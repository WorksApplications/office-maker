AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Profile Service
Resources:
  ProfilesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: profiles
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: employeeId
          AttributeType: S
        - AttributeName: normalizedName1
          AttributeType: S
        - AttributeName: normalizedName2
          AttributeType: S
        - AttributeName: normalizedRuby1
          AttributeType: S
        - AttributeName: normalizedRuby2
          AttributeType: S
      KeySchema:
        -
          AttributeName: userId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      GlobalSecondaryIndexes:
        -
          IndexName: profilesName1Index
          KeySchema:
            -
              AttributeName: normalizedName1
              KeyType: HASH
            -
              AttributeName: userId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
        -
          IndexName: profilesName2Index
          KeySchema:
            -
              AttributeName: normalizedName2
              KeyType: HASH
            -
              AttributeName: userId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
        -
          IndexName: profilesRuby1Index
          KeySchema:
            -
              AttributeName: normalizedRuby1
              KeyType: HASH
            -
              AttributeName: userId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
        -
          IndexName: profilesRuby2Index
          KeySchema:
            -
              AttributeName: normalizedRuby2
              KeyType: HASH
            -
              AttributeName: userId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
        -
          IndexName: profilesEmployeeIdIndex
          KeySchema:
            -
              AttributeName: employeeId
              KeyType: HASH
            -
              AttributeName: userId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5

  ProfilesSearchHelpTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: profilesSearchHelp
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: post
          AttributeType: S
        - AttributeName: mail
          AttributeType: S
        - AttributeName: normalizedMailBeforeAt
          AttributeType: S
      KeySchema:
        -
          AttributeName: userId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      GlobalSecondaryIndexes:
        -
          IndexName: profilesPostIndex
          KeySchema:
            -
              AttributeName: post
              KeyType: HASH
            -
              AttributeName: userId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
        -
          IndexName: profilesMailIndex
          KeySchema:
            -
              AttributeName: mail
              KeyType: HASH
            -
              AttributeName: userId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
        -
          IndexName: profilesMailBeforeAtIndex
          KeySchema:
            -
              AttributeName: normalizedMailBeforeAt
              KeyType: HASH
            -
              AttributeName: userId
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5

  Authorizer:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: profiles_authorizer
      Handler: functions/authorizer/index.handler
      Runtime: nodejs6.10

  ProfilesQuery:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: profiles_profiles_query
      Handler: functions/profiles/query.handler
      Runtime: nodejs6.10
      Policies: AmazonDynamoDBReadOnlyAccess
      Timeout: 30

  ProfilesGet:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: profiles_profiles_get
      Handler: functions/profiles/get.handler
      Runtime: nodejs6.10
      Policies: AmazonDynamoDBReadOnlyAccess

  ProfilesPut:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: profiles_profiles_put
      Handler: functions/profiles/put.handler
      Runtime: nodejs6.10
      Policies: AmazonDynamoDBFullAccess

  ProfilesPatch:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: profiles_profiles_patch
      Handler: functions/profiles/patch.handler
      Runtime: nodejs6.10
      Policies: AmazonDynamoDBFullAccess

  ProfilesDelete:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: profiles_profiles_delete
      Handler: functions/profiles/delete.handler
      Runtime: nodejs6.10
      Policies: AmazonDynamoDBFullAccess

  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      DefinitionUri: swagger.yml
      Variables:
        LambdaAlias: DEV

  # https://github.com/awslabs/serverless-application-model/issues/59
  ProfilesQueryPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ProfilesQuery
      Principal: apigateway.amazonaws.com

  ProfilesGetPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ProfilesGet
      Principal: apigateway.amazonaws.com

  ProfilesPutPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ProfilesPut
      Principal: apigateway.amazonaws.com

  ProfilesPatchPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ProfilesPatch
      Principal: apigateway.amazonaws.com

  ProfilesDeletePermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ProfilesDelete
      Principal: apigateway.amazonaws.com

  AuthorizerPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref Authorizer
      Principal: apigateway.amazonaws.com
