AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Profile Service
Resources:
  ProfilesTable:
     Type: AWS::DynamoDB::Table
     Properties:
        TableName: profiles
        AttributeDefinitions:
            AttributeName: userId
            AttributeType: S
        KeySchema:
            AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
  ProfilesQuery:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: profiles_profiles_query
      Handler: functions/profiles/query.handler
      Runtime: nodejs6.10
      Policies: AmazonDynamoDBReadOnlyAccess

  ProfilesGet:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: profiles_profiles_get
      Handler: functions/profiles/get.handler
      Runtime: nodejs6.10
      Policies: AmazonDynamoDBReadOnlyAccess

  ProfilesPut:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: profiles_profiles_put
      Handler: functions/profiles/put.handler
      Runtime: nodejs6.10
      Policies: AmazonDynamoDBFullAccess

  ProfilesPatch:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: profiles_profiles_patch
      Handler: functions/profiles/patch.handler
      Runtime: nodejs6.10
      Policies: AmazonDynamoDBFullAccess

  ProfilesDelete:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: profiles_profiles_delete
      Handler: functions/profiles/delete.handler
      Runtime: nodejs6.10
      Policies: AmazonDynamoDBFullAccess

  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      DefinitionUri: swagger.yml
      Variables:
        LambdaAlias: DEV

  # https://github.com/awslabs/serverless-application-model/issues/59
  ProfilesQueryPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ProfilesQuery
      Principal: apigateway.amazonaws.com

  ProfilesGetPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ProfilesGet
      Principal: apigateway.amazonaws.com

  ProfilesPutPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ProfilesPut
      Principal: apigateway.amazonaws.com

  ProfilesPatchPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ProfilesPatch
      Principal: apigateway.amazonaws.com

  ProfilesDeletePermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ProfilesDelete
      Principal: apigateway.amazonaws.com
