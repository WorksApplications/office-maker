Elm.Prototypes = Elm.Prototypes || {};
Elm.Prototypes.make = function (_elm) {
   "use strict";
   _elm.Prototypes = _elm.Prototypes || {};
   if (_elm.Prototypes.values) return _elm.Prototypes.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $EquipmentsOperation = Elm.EquipmentsOperation.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Util$ListUtil = Elm.Util.ListUtil.make(_elm);
   var _op = {};
   var generateAllCandidatePosition = F3(function (_p2,_p1,_p0) {
      var _p3 = _p2;
      var _p4 = _p1;
      var _p5 = _p0;
      var tops = A2($List.map,
      function (index) {
         return _p4._1 + _p3._1 * index;
      },
      _p5._1);
      var lefts = A2($List.map,
      function (index) {
         return _p4._0 + _p3._0 * index;
      },
      _p5._0);
      return A2($List.concatMap,
      function (left) {
         return A2($List.map,
         function (top) {
            return {ctor: "_Tuple2",_0: left,_1: top};
         },
         tops);
      },
      lefts);
   });
   var stampIndices = F4(function (horizontal,_p8,_p7,_p6) {
      var _p9 = _p8;
      var _p18 = _p9._0;
      var _p17 = _p9._1;
      var _p10 = _p7;
      var _p16 = _p10._1;
      var _p15 = _p10._0;
      var _p11 = _p6;
      var _p14 = _p11._1;
      var _p13 = _p11._0;
      var _p12 = function () {
         if (horizontal) {
               var amountY = _U.cmp($Basics.abs(_p14 - _p16),
               _p17 / 2 | 0) > 0 ? 1 : 0;
               var amountX = ($Basics.abs(_p13 - _p15) + (_p18 / 2 | 0)) / _p18 | 0;
               return {ctor: "_Tuple2",_0: amountX,_1: amountY};
            } else {
               var amountY = ($Basics.abs(_p14 - _p16) + (_p17 / 2 | 0)) / _p17 | 0;
               var amountX = _U.cmp($Basics.abs(_p13 - _p15),
               _p18 / 2 | 0) > 0 ? 1 : 0;
               return {ctor: "_Tuple2",_0: amountX,_1: amountY};
            }
      }();
      var amountX = _p12._0;
      var amountY = _p12._1;
      return {ctor: "_Tuple2"
             ,_0: A2($List.map,
             function (i) {
                return _U.cmp(_p13,_p15) > 0 ? i : 0 - i;
             },
             _U.range(0,amountX))
             ,_1: A2($List.map,
             function (i) {
                return _U.cmp(_p14,_p16) > 0 ? i : 0 - i;
             },
             _U.range(0,amountY))};
   });
   var stampCandidatesOnDragging = F4(function (gridSize,
   prototype,
   _p20,
   _p19) {
      var _p21 = _p20;
      var _p34 = _p21._1;
      var _p33 = _p21._0;
      var _p22 = _p19;
      var _p32 = _p22._1;
      var _p31 = _p22._0;
      var horizontal = _U.cmp($Basics.abs(_p31 - _p33),
      $Basics.abs(_p32 - _p34)) > 0;
      var flip = function (_p23) {
         var _p24 = _p23;
         return {ctor: "_Tuple2",_0: _p24._1,_1: _p24._0};
      };
      var _p25 = prototype;
      var prototypeId = _p25._0;
      var color = _p25._1;
      var name = _p25._2;
      var deskSize = _p25._3;
      var _p26 = horizontal ? flip(deskSize) : deskSize;
      var deskWidth = _p26._0;
      var deskHeight = _p26._1;
      var _p27 = A4(stampIndices,
      horizontal,
      {ctor: "_Tuple2",_0: deskWidth,_1: deskHeight},
      {ctor: "_Tuple2",_0: _p33,_1: _p34},
      {ctor: "_Tuple2",_0: _p31,_1: _p32});
      var indicesX = _p27._0;
      var indicesY = _p27._1;
      var _p28 = A2($EquipmentsOperation.fitToGrid,
      gridSize,
      {ctor: "_Tuple2"
      ,_0: _p33 - ($Basics.fst(deskSize) / 2 | 0)
      ,_1: _p34 - ($Basics.snd(deskSize) / 2 | 0)});
      var centerLeft = _p28._0;
      var centerTop = _p28._1;
      var all = A3(generateAllCandidatePosition,
      {ctor: "_Tuple2",_0: deskWidth,_1: deskHeight},
      {ctor: "_Tuple2",_0: centerLeft,_1: centerTop},
      {ctor: "_Tuple2",_0: indicesX,_1: indicesY});
      return A2($List.map,
      function (_p29) {
         var _p30 = _p29;
         return {ctor: "_Tuple2"
                ,_0: {ctor: "_Tuple4"
                     ,_0: prototypeId
                     ,_1: color
                     ,_2: name
                     ,_3: {ctor: "_Tuple2",_0: deskWidth,_1: deskHeight}}
                ,_1: {ctor: "_Tuple2",_0: _p30._0,_1: _p30._1}};
      },
      all);
   });
   var prototypes = function (model) {
      return A2($List.indexedMap,
      F2(function (index,prototype) {
         return {ctor: "_Tuple2"
                ,_0: prototype
                ,_1: _U.eq(model.selected,index)};
      }),
      model.data);
   };
   var findPrototypeByIndex = F2(function (index,list) {
      var _p35 = A2($Util$ListUtil.getAt,index,list);
      if (_p35.ctor === "Just") {
            return _p35._0;
         } else {
            var _p36 = $List.head(list);
            if (_p36.ctor === "Just") {
                  return _p36._0;
               } else {
                  return _U.crashCase("Prototypes",
                  {start: {line: 75,column: 7},end: {line: 77,column: 53}},
                  _p36)("no prototypes found");
               }
         }
   });
   var selectedPrototype = function (model) {
      return A2(findPrototypeByIndex,model.selected,model.data);
   };
   var register = F2(function (prototype,model) {
      var newPrototypes = A2($Basics._op["++"],
      model.data,
      _U.list([prototype]));
      return _U.update(model,
      {data: newPrototypes
      ,selected: $List.length(newPrototypes) - 1});
   });
   var update = F2(function (action,model) {
      var _p38 = action;
      if (_p38.ctor === "SelectPrev") {
            return _U.update(model,
            {selected: A2($Basics.max,0,model.selected - 1)});
         } else {
            return _U.update(model,
            {selected: A2($Basics.min,
            $List.length(model.data) - 1,
            model.selected + 1)});
         }
   });
   var SelectNext = {ctor: "SelectNext"};
   var next = SelectNext;
   var SelectPrev = {ctor: "SelectPrev"};
   var prev = SelectPrev;
   var gridSize = 8;
   var init = {data: _U.list([{ctor: "_Tuple4"
                              ,_0: "1"
                              ,_1: "#ed9"
                              ,_2: ""
                              ,_3: {ctor: "_Tuple2",_0: gridSize * 6,_1: gridSize * 10}}
                             ,{ctor: "_Tuple4"
                              ,_0: "2"
                              ,_1: "#8bd"
                              ,_2: "foo"
                              ,_3: {ctor: "_Tuple2",_0: gridSize * 7,_1: gridSize * 12}}])
              ,selected: 0};
   var Model = F2(function (a,b) {
      return {data: a,selected: b};
   });
   return _elm.Prototypes.values = {_op: _op
                                   ,Model: Model
                                   ,gridSize: gridSize
                                   ,init: init
                                   ,SelectPrev: SelectPrev
                                   ,SelectNext: SelectNext
                                   ,prev: prev
                                   ,next: next
                                   ,update: update
                                   ,register: register
                                   ,selectedPrototype: selectedPrototype
                                   ,findPrototypeByIndex: findPrototypeByIndex
                                   ,prototypes: prototypes
                                   ,stampIndices: stampIndices
                                   ,generateAllCandidatePosition: generateAllCandidatePosition
                                   ,stampCandidatesOnDragging: stampCandidatesOnDragging};
};