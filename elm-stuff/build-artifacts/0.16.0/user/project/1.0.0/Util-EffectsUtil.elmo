Elm.Util = Elm.Util || {};
Elm.Util.EffectsUtil = Elm.Util.EffectsUtil || {};
Elm.Util.EffectsUtil.make = function (_elm) {
   "use strict";
   _elm.Util = _elm.Util || {};
   _elm.Util.EffectsUtil = _elm.Util.EffectsUtil || {};
   if (_elm.Util.EffectsUtil.values)
   return _elm.Util.EffectsUtil.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Effects = Elm.Effects.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Task = Elm.Task.make(_elm);
   var _op = {};
   var fromTaskWithNoError = F2(function (f,task) {
      return $Effects.task(A2($Task.map,f,task));
   });
   var fromTask = F3(function (g,f,task) {
      return $Effects.task(A2($Task.onError,
      A2($Task.andThen,
      task,
      function (a) {
         return $Task.succeed(f(a));
      }),
      function (e) {
         return $Task.succeed(g(e));
      }));
   });
   return _elm.Util.EffectsUtil.values = {_op: _op
                                         ,fromTask: fromTask
                                         ,fromTaskWithNoError: fromTaskWithNoError};
};