Elm.Equipments = Elm.Equipments || {};
Elm.Equipments.make = function (_elm) {
   "use strict";
   _elm.Equipments = _elm.Equipments || {};
   if (_elm.Equipments.values) return _elm.Equipments.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var position = function (equipment) {
      var _p0 = equipment;
      return {ctor: "_Tuple2",_0: _p0._1._0,_1: _p0._1._1};
   };
   var Desk = F4(function (a,b,c,d) {
      return {ctor: "Desk",_0: a,_1: b,_2: c,_3: d};
   });
   var init = Desk;
   var copy = F3(function (newId,_p1,equipment) {
      var _p2 = _p1;
      var _p3 = equipment;
      return A4(Desk,
      newId,
      {ctor: "_Tuple4"
      ,_0: _p2._0
      ,_1: _p2._1
      ,_2: _p3._1._2
      ,_3: _p3._1._3},
      _p3._2,
      _p3._3);
   });
   return _elm.Equipments.values = {_op: _op
                                   ,init: init
                                   ,copy: copy
                                   ,position: position
                                   ,Desk: Desk};
};