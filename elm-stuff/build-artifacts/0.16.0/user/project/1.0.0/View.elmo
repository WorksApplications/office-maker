Elm.View = Elm.View || {};
Elm.View.make = function (_elm) {
   "use strict";
   _elm.View = _elm.View || {};
   if (_elm.View.values) return _elm.View.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Equipments = Elm.Equipments.make(_elm),
   $EquipmentsOperation = Elm.EquipmentsOperation.make(_elm),
   $Floor = Elm.Floor.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Icons = Elm.Icons.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Model = Elm.Model.make(_elm),
   $Prototypes = Elm.Prototypes.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Scale = Elm.Scale.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Styles = Elm.Styles.make(_elm),
   $Util$HtmlUtil = Elm.Util.HtmlUtil.make(_elm),
   $Util$ListUtil = Elm.Util.ListUtil.make(_elm),
   $Util$UndoRedo = Elm.Util.UndoRedo.make(_elm);
   var _op = {};
   var colorPropertyView = F2(function (address,model) {
      var match = function (color) {
         var _p0 = $EquipmentsOperation.colorProperty($Model.selectedEquipments(model));
         if (_p0.ctor === "Just") {
               return _U.eq(color,_p0._0);
            } else {
               return false;
            }
      };
      var viewForEach = function (color) {
         return A2($Html.li,
         _U.list([$Html$Attributes.style(A2($Styles.colorProperty,
                 color,
                 match(color)))
                 ,$Util$HtmlUtil.onMouseDown$(A2($Signal.forwardTo,
                 address,
                 $Model.SelectColor(color)))]),
         _U.list([]));
      };
      return A2($Html.ul,
      _U.list([$Html$Attributes.style(A2($Basics._op["++"],
      $Styles.ul,
      _U.list([{ctor: "_Tuple2",_0: "display",_1: "flex"}])))]),
      A2($List.map,viewForEach,model.colorPalette));
   });
   var debugView = F2(function (address,model) {
      return _U.list([$Html.text($Basics.toString(A2($List.map,
                     $EquipmentsOperation.idOf,
                     model.copiedEquipments)))
                     ,A2($Html.br,_U.list([]),_U.list([]))
                     ,$Html.text($Basics.toString(model.keys.ctrl))
                     ,A2($Html.br,_U.list([]),_U.list([]))
                     ,$Html.text($Basics.toString(model.editingEquipment))
                     ,A2($Html.br,_U.list([]),_U.list([]))]);
   });
   var propertyView = F2(function (address,model) {
      return _U.list([$Html.text("Properties")
                     ,A2(colorPropertyView,address,model)]);
   });
   var modeSelectionView = F2(function (address,model) {
      var widthStyle = _U.list([{ctor: "_Tuple2"
                                ,_0: "width"
                                ,_1: "80px"}]);
      var selection = A2($Html.div,
      _U.list([$Html$Attributes.style(A2($Basics._op["++"],
              $Styles.selection(_U.eq(model.editMode,$Model.Select)),
              widthStyle))
              ,$Util$HtmlUtil.onClick$(A2($Signal.forwardTo,
              address,
              $Basics.always($Model.ChangeMode($Model.Select))))]),
      _U.list([$Icons.selectMode(_U.eq(model.editMode,
      $Model.Select))]));
      var pen = A2($Html.div,
      _U.list([$Html$Attributes.style(A2($Basics._op["++"],
              $Styles.selection(_U.eq(model.editMode,$Model.Pen)),
              widthStyle))
              ,$Util$HtmlUtil.onClick$(A2($Signal.forwardTo,
              address,
              $Basics.always($Model.ChangeMode($Model.Pen))))]),
      _U.list([$Icons.penMode(_U.eq(model.editMode,$Model.Pen))]));
      var stamp = A2($Html.div,
      _U.list([$Html$Attributes.style(A2($Basics._op["++"],
              $Styles.selection(_U.eq(model.editMode,$Model.Stamp)),
              widthStyle))
              ,$Util$HtmlUtil.onClick$(A2($Signal.forwardTo,
              address,
              $Basics.always($Model.ChangeMode($Model.Stamp))))]),
      _U.list([$Icons.stampMode(_U.eq(model.editMode,
      $Model.Stamp))]));
      return A2($Html.div,
      _U.list([$Html$Attributes.style(A2($Basics._op["++"],
      $Styles.flex,
      _U.list([{ctor: "_Tuple2",_0: "margin-top",_1: "10px"}])))]),
      _U.list([selection,pen,stamp]));
   });
   var card = function (children) {
      return A2($Html.div,
      _U.list([$Html$Attributes.style(_U.list([{ctor: "_Tuple2"
                                               ,_0: "margin-bottom"
                                               ,_1: "20px"}
                                              ,{ctor: "_Tuple2",_0: "padding",_1: "20px"}]))]),
      children);
   };
   var inputAttributes = F5(function (address,
   toInputAction,
   toKeydownAction,
   value$,
   defence) {
      return A2($Basics._op["++"],
      _U.list([$Util$HtmlUtil.onInput$(A2($Signal.forwardTo,
              address,
              toInputAction))
              ,$Util$HtmlUtil.onKeyDown$$(A2($Signal.forwardTo,
              address,
              toKeydownAction))
              ,$Html$Attributes.value(value$)]),
      defence ? _U.list([$Util$HtmlUtil.onMouseDown$(A2($Signal.forwardTo,
      address,
      $Basics.always($Model.NoOp)))]) : _U.list([]));
   });
   var floorNameInputView = F2(function (address,model) {
      return A2($Html.input,
      A2($Basics._op["++"],
      _U.list([$Html$Attributes.id("floor-name-input")
              ,$Html$Attributes.type$("text")]),
      A5(inputAttributes,
      address,
      $Model.InputFloorName,
      $Basics.always($Model.NoOp),
      $Util$UndoRedo.data(model.floor).name,
      false)),
      _U.list([]));
   });
   var floorRealSizeInputView = F2(function (address,model) {
      var useReal = true;
      var widthInput = A2($Html.input,
      A2($Basics._op["++"],
      _U.list([$Html$Attributes.id("floor-real-width-input")
              ,$Html$Attributes.type$("text")
              ,$Html$Attributes.disabled($Basics.not(useReal))
              ,$Html$Attributes.style($Styles.realSizeInput)]),
      A5(inputAttributes,
      address,
      $Model.InputFloorRealWidth,
      $Basics.always($Model.NoOp),
      model.inputFloorRealWidth,
      false)),
      _U.list([]));
      var heightInput = A2($Html.input,
      A2($Basics._op["++"],
      _U.list([$Html$Attributes.id("floor-real-height-input")
              ,$Html$Attributes.type$("text")
              ,$Html$Attributes.disabled($Basics.not(useReal))
              ,$Html$Attributes.style($Styles.realSizeInput)]),
      A5(inputAttributes,
      address,
      $Model.InputFloorRealHeight,
      $Basics.always($Model.NoOp),
      model.inputFloorRealHeight,
      false)),
      _U.list([]));
      var floor = $Util$UndoRedo.data(model.floor);
      return A2($Html.div,
      _U.list([]),
      _U.list([widthInput,heightInput]));
   });
   var transitionDisabled = function (model) {
      return $Basics.not(model.scaling);
   };
   var nameInputView = F2(function (address,model) {
      var _p1 = model.editingEquipment;
      if (_p1.ctor === "Just") {
            var _p3 = _p1._0._1;
            var _p2 = A2($EquipmentsOperation.findEquipmentById,
            $Util$UndoRedo.data(model.floor).equipments,
            _p1._0._0);
            if (_p2.ctor === "Just") {
                  var styles = A2($Basics._op["++"],
                  $Styles.deskInput(A2($Scale.imageToScreenForRect,
                  model.scale,
                  _p2._0._1)),
                  $Styles.transition(transitionDisabled(model)));
                  return A2($Html.textarea,
                  A2($Basics._op["++"],
                  _U.list([$Html$Attributes.id("name-input")
                          ,$Html$Attributes.style(styles)]),
                  A5(inputAttributes,
                  address,
                  $Model.InputName(_p2._0._0),
                  $Model.KeydownOnNameInput,
                  _p3,
                  true)),
                  _U.list([$Html.text(_p3)]));
               } else {
                  return $Html.text("");
               }
         } else {
            return $Html.text("");
         }
   });
   var equipmentLabelView = F3(function (scale,
   disableTransition,
   name) {
      var styles = A2($Basics._op["++"],
      $Styles.nameLabel(1.0 / $Basics.toFloat(A2($Scale.screenToImage,
      scale,
      1))),
      $Styles.transition(disableTransition));
      return A2($Html.pre,
      _U.list([$Html$Attributes.style(styles)]),
      _U.list([$Html.text(name)]));
   });
   var equipmentView$ = F9(function (key$,
   rect,
   color,
   name,
   selected,
   alpha,
   eventHandlers,
   scale,
   disableTransition) {
      var screenRect = A2($Scale.imageToScreenForRect,scale,rect);
      var styles = A2($Basics._op["++"],
      A4($Styles.desk,screenRect,color,selected,alpha),
      A2($Basics._op["++"],
      _U.list([{ctor: "_Tuple2",_0: "display",_1: "table"}]),
      $Styles.transition(disableTransition)));
      return A2($Html.div,
      A2($Basics._op["++"],
      eventHandlers,
      _U.list([$Html$Attributes.key(key$)
              ,$Html$Attributes.style(styles)])),
      _U.list([A3(equipmentLabelView,scale,disableTransition,name)]));
   });
   var temporaryStampView = F3(function (scale,selected,_p4) {
      var _p5 = _p4;
      var _p9 = _p5._1._1;
      var _p8 = _p5._1._0;
      var _p7 = _p5._0._3._0;
      var _p6 = _p5._0._3._1;
      return A9(equipmentView$,
      A2($Basics._op["++"],
      "temporary_",
      A2($Basics._op["++"],
      $Basics.toString(_p8),
      A2($Basics._op["++"],
      "_",
      A2($Basics._op["++"],
      $Basics.toString(_p9),
      A2($Basics._op["++"],
      "_",
      A2($Basics._op["++"],
      $Basics.toString(_p7),
      A2($Basics._op["++"],"_",$Basics.toString(_p6)))))))),
      {ctor: "_Tuple4",_0: _p8,_1: _p9,_2: _p7,_3: _p6},
      _p5._0._1,
      _p5._0._2,
      selected,
      false,
      _U.list([]),
      scale,
      true);
   });
   var prototypePreviewView = F3(function (address,
   prototypes,
   stampMode) {
      var selectedIndex = A2($Maybe.withDefault,
      0,
      $List.head(A2($List.filterMap,
      function (_p10) {
         var _p11 = _p10;
         return _p11._0._1 ? $Maybe.Just(_p11._1) : $Maybe.Nothing;
      },
      $Util$ListUtil.zipWithIndex(prototypes))));
      var buttons = A2($List.map,
      function (label) {
         var position = {ctor: "_Tuple2"
                        ,_0: _U.eq(label,"<") ? "left" : "right"
                        ,_1: "3px"};
         return A2($Html.div,
         _U.list([$Html$Attributes.style(A2($List._op["::"],
                 position,
                 $Styles.prototypePreviewScroll))
                 ,$Util$HtmlUtil.onClick$(A2($Signal.forwardTo,
                 address,
                 $Basics.always(_U.eq(label,
                 "<") ? $Model.PrototypesAction($Prototypes.prev) : $Model.PrototypesAction($Prototypes.next))))]),
         _U.list([$Html.text(label)]));
      },
      A2($Basics._op["++"],
      _U.cmp(selectedIndex,0) > 0 ? _U.list(["<"]) : _U.list([]),
      _U.cmp(selectedIndex,
      $List.length(prototypes) - 1) < 0 ? _U.list([">"]) : _U.list([])));
      var height = 238;
      var width = 238;
      var each = F2(function (index,_p12) {
         var _p13 = _p12;
         var _p15 = _p13._0;
         var _p14 = _p15;
         var w = _p14._3._0;
         var h = _p14._3._1;
         var left = (width / 2 | 0) - (w / 2 | 0);
         var top = (height / 2 | 0) - (h / 2 | 0);
         return A3(temporaryStampView,
         $Scale.init,
         false,
         {ctor: "_Tuple2"
         ,_0: _p15
         ,_1: {ctor: "_Tuple2",_0: left + index * width,_1: top}});
      });
      var inner = A2($Html.div,
      _U.list([$Html$Attributes.style($Styles.prototypePreviewViewInner(selectedIndex))]),
      A2($List.indexedMap,each,prototypes));
      return A2($Html.div,
      _U.list([$Html$Attributes.style($Styles.prototypePreviewView(stampMode))]),
      A2($List._op["::"],inner,buttons));
   });
   var penView = F2(function (address,model) {
      var prototypes = $Prototypes.prototypes(model.prototypes);
      return _U.list([$Util$HtmlUtil.fileLoadButton(A2($Signal.forwardTo,
                     address,
                     $Model.LoadFile))
                     ,A2(floorNameInputView,address,model)
                     ,A2(floorRealSizeInputView,address,model)
                     ,A2(modeSelectionView,address,model)
                     ,A3(prototypePreviewView,
                     address,
                     prototypes,
                     _U.eq(model.editMode,$Model.Stamp))]);
   });
   var subView = F2(function (address,model) {
      return A2($Html.div,
      _U.list([$Html$Attributes.style($Styles.subMenu)]),
      _U.list([card(A2(penView,address,model))
              ,card(A2(propertyView,address,model))
              ,card(A2(debugView,address,model))]));
   });
   var temporaryStampsView = function (model) {
      return A2($List.map,
      A2(temporaryStampView,model.scale,false),
      $Model.stampCandidates(model));
   };
   var equipmentView = F8(function (address,
   model,
   moving,
   selected,
   alpha,
   equipment,
   contextMenuDisabled,
   disableTransition) {
      var _p16 = equipment;
      var _p22 = _p16._1._1;
      var _p21 = _p16._1._0;
      var _p20 = _p16._0;
      var contextMenu = contextMenuDisabled ? _U.list([]) : _U.list([$Util$HtmlUtil.onContextMenu$(A2($Signal.forwardTo,
      address,
      $Model.ShowContextMenuOnEquipment(_p20)))]);
      var eventHandlers = A2($Basics._op["++"],
      contextMenu,
      _U.list([$Util$HtmlUtil.onMouseDown$(A2($Signal.forwardTo,
              address,
              $Model.MouseDownOnEquipment(_p20)))
              ,$Util$HtmlUtil.onDblClick$(A2($Signal.forwardTo,
              address,
              $Model.StartEditEquipment(_p20)))]));
      var _p17 = function () {
         var _p18 = moving;
         if (_p18.ctor === "Just" && _p18._0.ctor === "_Tuple2" && _p18._0._0.ctor === "_Tuple2" && _p18._0._1.ctor === "_Tuple2")
         {
               var _p19 = A2($Scale.screenToImageForPosition,
               model.scale,
               {ctor: "_Tuple2"
               ,_0: _p18._0._1._0 - _p18._0._0._0
               ,_1: _p18._0._1._1 - _p18._0._0._1});
               var dx = _p19._0;
               var dy = _p19._1;
               return A2($EquipmentsOperation.fitToGrid,
               model.gridSize,
               {ctor: "_Tuple2",_0: _p21 + dx,_1: _p22 + dy});
            } else {
               return {ctor: "_Tuple2",_0: _p21,_1: _p22};
            }
      }();
      var x = _p17._0;
      var y = _p17._1;
      var movingBool = !_U.eq(moving,$Maybe.Nothing);
      return A9(equipmentView$,
      A2($Basics._op["++"],_p20,$Basics.toString(movingBool)),
      {ctor: "_Tuple4",_0: x,_1: y,_2: _p16._1._2,_3: _p16._1._3},
      _p16._2,
      _p16._3,
      selected,
      alpha,
      eventHandlers,
      model.scale,
      disableTransition);
   });
   var canvasView = F2(function (address,model) {
      var _p23 = model.offset;
      var offsetX = _p23._0;
      var offsetY = _p23._1;
      var temporaryStamps$ = temporaryStampsView(model);
      var isDragged = function (equipment) {
         return function () {
            var _p24 = model.draggingContext;
            if (_p24.ctor === "MoveEquipment") {
                  return true;
               } else {
                  return false;
               }
         }() && A2($List.member,
         $EquipmentsOperation.idOf(equipment),
         model.selectedEquipments);
      };
      var disableTransition = transitionDisabled(model);
      var selectorRect = function () {
         var _p25 = {ctor: "_Tuple2"
                    ,_0: model.editMode
                    ,_1: model.selectorRect};
         if (_p25.ctor === "_Tuple2" && _p25._0.ctor === "Select" && _p25._1.ctor === "Just")
         {
               return A2($Html.div,
               _U.list([$Html$Attributes.style(A2($Basics._op["++"],
               $Styles.selectorRect(A2($Scale.imageToScreenForRect,
               model.scale,
               _p25._1._0)),
               $Styles.transition(disableTransition)))]),
               _U.list([]));
            } else {
               return $Html.text("");
            }
      }();
      var floor = $Util$UndoRedo.data(model.floor);
      var nonDraggingEquipments = A2($List.map,
      function (equipment) {
         return A8(equipmentView,
         address,
         model,
         $Maybe.Nothing,
         A2($Model.isSelected,model,equipment),
         isDragged(equipment),
         equipment,
         model.keys.ctrl,
         disableTransition);
      },
      floor.equipments);
      var draggingEquipments = function () {
         if (function () {
            var _p26 = model.draggingContext;
            if (_p26.ctor === "MoveEquipment") {
                  return true;
               } else {
                  return false;
               }
         }()) {
               var moving = function () {
                  var _p27 = {ctor: "_Tuple2"
                             ,_0: model.draggingContext
                             ,_1: model.pos};
                  if (_p27.ctor === "_Tuple2" && _p27._0.ctor === "MoveEquipment" && _p27._0._1.ctor === "_Tuple2" && _p27._1.ctor === "Just" && _p27._1._0.ctor === "_Tuple2")
                  {
                        return $Maybe.Just({ctor: "_Tuple2"
                                           ,_0: {ctor: "_Tuple2",_0: _p27._0._1._0,_1: _p27._0._1._1}
                                           ,_1: {ctor: "_Tuple2",_0: _p27._1._0._0,_1: _p27._1._0._1}});
                     } else {
                        return $Maybe.Nothing;
                     }
               }();
               var equipments = A2($List.filter,isDragged,floor.equipments);
               return A2($List.map,
               function (equipment) {
                  return A8(equipmentView,
                  address,
                  model,
                  moving,
                  A2($Model.isSelected,model,equipment),
                  false,
                  equipment,
                  model.keys.ctrl,
                  disableTransition);
               },
               equipments);
            } else return _U.list([]);
      }();
      var equipments = A2($Basics._op["++"],
      draggingEquipments,
      nonDraggingEquipments);
      var rect = A2($Scale.imageToScreenForRect,
      model.scale,
      {ctor: "_Tuple4"
      ,_0: offsetX
      ,_1: offsetY
      ,_2: $Floor.width(floor)
      ,_3: $Floor.height(floor)});
      var image = A2($Html.img,
      _U.list([$Html$Attributes.style(_U.list([{ctor: "_Tuple2"
                                               ,_0: "width"
                                               ,_1: "100%"}
                                              ,{ctor: "_Tuple2",_0: "height",_1: "100%"}]))
              ,$Html$Attributes.src(A2($Maybe.withDefault,
              "",
              $Floor.src(floor)))]),
      _U.list([]));
      return A2($Html.div,
      _U.list([$Html$Attributes.style(A2($Basics._op["++"],
      $Styles.canvasView(rect),
      $Styles.transition(disableTransition)))]),
      A2($Basics._op["++"],
      A2($List._op["::"],
      image,
      A2($List._op["::"],
      A2(nameInputView,address,model),
      A2($List._op["::"],selectorRect,equipments))),
      temporaryStamps$));
   });
   var canvasContainerView = F2(function (address,model) {
      return A2($Html.div,
      _U.list([$Html$Attributes.style(A2($Basics._op["++"],
              $Styles.canvasContainer,
              _U.eq(model.editMode,$Model.Stamp) ? _U.list([]) : _U.list([])))
              ,$Util$HtmlUtil.onMouseMove$(A2($Signal.forwardTo,
              address,
              $Model.MoveOnCanvas))
              ,$Util$HtmlUtil.onMouseDown$(A2($Signal.forwardTo,
              address,
              $Model.MouseDownOnCanvas))
              ,$Util$HtmlUtil.onMouseUp$(A2($Signal.forwardTo,
              address,
              $Model.MouseUpOnCanvas))
              ,$Util$HtmlUtil.onMouseEnter$(A2($Signal.forwardTo,
              address,
              $Basics.always($Model.EnterCanvas)))
              ,$Util$HtmlUtil.onMouseLeave$(A2($Signal.forwardTo,
              address,
              $Basics.always($Model.LeaveCanvas)))
              ,A2($Util$HtmlUtil.onMouseWheel,address,$Model.MouseWheel)]),
      _U.list([A2(canvasView,address,model)]));
   });
   var mainView = F2(function (address,model) {
      var _p28 = model.windowDimensions;
      var windowWidth = _p28._0;
      var windowHeight = _p28._1;
      var height = windowHeight - $Styles.headerHeight;
      return A2($Html.main$,
      _U.list([$Html$Attributes.style(A2($Basics._op["++"],
      $Styles.flex,
      _U.list([{ctor: "_Tuple2"
               ,_0: "height"
               ,_1: A2($Basics._op["++"],$Basics.toString(height),"px")}])))]),
      _U.list([A2(canvasContainerView,address,model)
              ,A2(subView,address,model)]));
   });
   var contextMenuItemView = F3(function (address,action,text$) {
      return A2($Html.div,
      _U.list([$Html$Attributes.$class("hovarable")
              ,$Html$Attributes.style($Styles.contextMenuItem)
              ,$Util$HtmlUtil.onMouseDown$(A2($Signal.forwardTo,
              address,
              action))]),
      _U.list([$Html.text(text$)]));
   });
   var contextMenuView = F2(function (address,model) {
      var _p29 = model.contextMenu;
      if (_p29.ctor === "NoContextMenu") {
            return $Html.text("");
         } else {
            var _p30 = _p29._1;
            return A2($Html.div,
            _U.list([$Html$Attributes.style(A3($Styles.contextMenu,
            {ctor: "_Tuple2",_0: _p29._0._0,_1: _p29._0._1},
            {ctor: "_Tuple2"
            ,_0: $Basics.fst(model.windowDimensions)
            ,_1: $Basics.snd(model.windowDimensions)},
            2))]),
            _U.list([A3(contextMenuItemView,
                    address,
                    $Model.SelectIsland(_p30),
                    "Select Island")
                    ,A3(contextMenuItemView,
                    address,
                    $Basics.always($Model.RegisterPrototype(_p30)),
                    "Register as stamp")
                    ,A3(contextMenuItemView,
                    address,
                    $Basics.always($Model.Rotate(_p30)),
                    "Rotate")]));
         }
   });
   var headerView = F2(function (address,model) {
      return A2($Html.header,
      _U.list([$Html$Attributes.style($Styles.header)
              ,A2($Util$HtmlUtil.mouseDownDefence,address,$Model.NoOp)]),
      _U.list([A2($Html.h1,
      _U.list([$Html$Attributes.style($Styles.h1)]),
      _U.list([$Html.text("Office Maker")]))]));
   });
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2(headerView,address,model)
              ,A2(mainView,address,model)
              ,A2(contextMenuView,address,model)]));
   });
   return _elm.View.values = {_op: _op,view: view};
};