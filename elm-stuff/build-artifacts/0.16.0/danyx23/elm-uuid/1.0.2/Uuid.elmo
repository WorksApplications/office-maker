Elm.Uuid = Elm.Uuid || {};
Elm.Uuid.make = function (_elm) {
   "use strict";
   _elm.Uuid = _elm.Uuid || {};
   if (_elm.Uuid.values) return _elm.Uuid.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Random$PCG = Elm.Random.PCG.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm),
   $Uuid$Barebones = Elm.Uuid.Barebones.make(_elm);
   var _op = {};
   var toString = function (_p0) {
      var _p1 = _p0;
      return _p1._0;
   };
   var Uuid = function (a) {    return {ctor: "Uuid",_0: a};};
   var fromString = function (text) {
      return $Uuid$Barebones.isValidUuid(text) ? $Maybe.Just(Uuid($String.toLower(text))) : $Maybe.Nothing;
   };
   var uuidGenerator = A2($Random$PCG.map,
   Uuid,
   $Uuid$Barebones.uuidStringGenerator);
   return _elm.Uuid.values = {_op: _op
                             ,toString: toString
                             ,fromString: fromString
                             ,uuidGenerator: uuidGenerator};
};